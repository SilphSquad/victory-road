{"version":3,"sources":["pokemon/10.png","pokemon/213.png","pokemon/568.png","pokemon/287.png","pokemon/206.png","pokemon/79.png","pokemon/399.png","pokemon/422-west.png","pokemon/349.png","pokemon/4.png","pokemon/559.png","pokemon/418.png","pokemon/50.png","pokemon/280.png","pokemon/143.png","pokemon/441.png","pokemon/214.png","pokemon/335.png","pokemon/142.png","pokemon/93.png","pokemon/404.png","pokemon/356.png","pokemon/61.png","pokemon/112.png","pokemon/197.png","pokemon/286.png","pokemon/426.png","pokemon/530.png","pokemon/212.png","pokemon/260.png","pokemon/545.png","pokemon/409.png","pokemon/373.png","pokemon/609.png","pokemon/68.png","pokemon/445.png","pokemon/376.png","pokemon/248.png","pokemon/448.png","pokemon/150.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","baseTheme","createMuiTheme","palette","primary","blue","secondary","red","useStyles","makeStyles","theme","grid","backgroundColor","minHeight","card","textAlign","typography","fontSize","textField","breakpoints","up","down","wrapper","display","redWrapper","padding","color","yellowWrapper","greenWrapper","goalLevel","VictoryRoad","images","level1","level2","level3","level4","level5","level6","level7","level8","level9","level10","level11","level12","level13","level14","level15","level16","level17","level18","level19","level20","level21","level22","level23","level24","level25","level26","level27","level28","level29","level30","level31","level32","level33","level34","level35","level36","level37","level38","level39","level40","levels","useState","currentXP","setCurrentXP","setGoalLevel","classes","shouldFullWidth","useMediaQuery","calculateLevel","filter","level","length","handleStyle","calculateRemaining","toLocaleString","Fragment","Grid","container","spacing","direction","alignItems","justify","className","item","sm","xs","Card","CardContent","Typography","TextField","fullWidth","value","label","size","onChange","event","target","Number","inputProps","step","min","max","type","Slider","newValue","aria-labelledby","variant","component","src","alt","Input","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3eb72aef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/10.65752597.png\";","module.exports = __webpack_public_path__ + \"static/media/213.2e9f294e.png\";","module.exports = __webpack_public_path__ + \"static/media/568.576e05b2.png\";","module.exports = __webpack_public_path__ + \"static/media/287.cb0c824e.png\";","module.exports = __webpack_public_path__ + \"static/media/206.eaba4eeb.png\";","module.exports = __webpack_public_path__ + \"static/media/79.f8d63c71.png\";","module.exports = __webpack_public_path__ + \"static/media/399.908ffd88.png\";","module.exports = __webpack_public_path__ + \"static/media/422-west.9f9129e1.png\";","module.exports = __webpack_public_path__ + \"static/media/349.4b59776f.png\";","module.exports = __webpack_public_path__ + \"static/media/4.775cd32a.png\";","module.exports = __webpack_public_path__ + \"static/media/559.ad02914b.png\";","module.exports = __webpack_public_path__ + \"static/media/418.d4b78ccc.png\";","module.exports = __webpack_public_path__ + \"static/media/50.3a74a800.png\";","module.exports = __webpack_public_path__ + \"static/media/280.fbf08e5d.png\";","module.exports = __webpack_public_path__ + \"static/media/143.c7476a02.png\";","module.exports = __webpack_public_path__ + \"static/media/441.f3a86e75.png\";","module.exports = __webpack_public_path__ + \"static/media/214.52fda7c9.png\";","module.exports = __webpack_public_path__ + \"static/media/335.6f939c44.png\";","module.exports = __webpack_public_path__ + \"static/media/142.6fde2b0d.png\";","module.exports = __webpack_public_path__ + \"static/media/93.d13b62e1.png\";","module.exports = __webpack_public_path__ + \"static/media/404.d497c96f.png\";","module.exports = __webpack_public_path__ + \"static/media/356.fce3d1d3.png\";","module.exports = __webpack_public_path__ + \"static/media/61.5527db5b.png\";","module.exports = __webpack_public_path__ + \"static/media/112.f1d4449e.png\";","module.exports = __webpack_public_path__ + \"static/media/197.370a65ee.png\";","module.exports = __webpack_public_path__ + \"static/media/286.1bce8369.png\";","module.exports = __webpack_public_path__ + \"static/media/426.899e7b77.png\";","module.exports = __webpack_public_path__ + \"static/media/530.7587807f.png\";","module.exports = __webpack_public_path__ + \"static/media/212.e31302e7.png\";","module.exports = __webpack_public_path__ + \"static/media/260.8ed528df.png\";","module.exports = __webpack_public_path__ + \"static/media/545.832e3234.png\";","module.exports = __webpack_public_path__ + \"static/media/409.054486d9.png\";","module.exports = __webpack_public_path__ + \"static/media/373.33ebd9bb.png\";","module.exports = __webpack_public_path__ + \"static/media/609.18f9d16b.png\";","module.exports = __webpack_public_path__ + \"static/media/68.c80509ce.png\";","module.exports = __webpack_public_path__ + \"static/media/445.a84fc25a.png\";","module.exports = __webpack_public_path__ + \"static/media/376.06bb027c.png\";","module.exports = __webpack_public_path__ + \"static/media/248.67211dde.png\";","module.exports = __webpack_public_path__ + \"static/media/448.6d8381c9.png\";","module.exports = __webpack_public_path__ + \"static/media/150.3770c714.png\";","import React, {useState} from 'react'\nimport './App.css'\nimport level1 from './pokemon/10.png'\nimport level2 from './pokemon/213.png'\nimport level3 from './pokemon/568.png'\nimport level4 from './pokemon/287.png'\nimport level5 from './pokemon/206.png'\nimport level6 from './pokemon/79.png'\nimport level7 from './pokemon/399.png'\nimport level8 from './pokemon/422-west.png'\nimport level9 from './pokemon/349.png'\nimport level10 from './pokemon/4.png'\nimport level11 from './pokemon/559.png'\nimport level12 from './pokemon/418.png'\nimport level13 from './pokemon/50.png'\nimport level14 from './pokemon/280.png'\nimport level15 from './pokemon/143.png'\nimport level16 from './pokemon/441.png'\nimport level17 from './pokemon/214.png'\nimport level18 from './pokemon/335.png'\nimport level19 from './pokemon/142.png'\nimport level20 from './pokemon/93.png'\nimport level21 from './pokemon/404.png'\nimport level22 from './pokemon/356.png'\nimport level23 from './pokemon/61.png'\nimport level24 from './pokemon/112.png'\nimport level25 from './pokemon/197.png'\nimport level26 from './pokemon/286.png'\nimport level27 from './pokemon/426.png'\nimport level28 from './pokemon/530.png'\nimport level29 from './pokemon/212.png'\nimport level30 from './pokemon/260.png'\nimport level31 from './pokemon/545.png'\nimport level32 from './pokemon/409.png'\nimport level33 from './pokemon/373.png'\nimport level34 from './pokemon/609.png'\nimport level35 from './pokemon/68.png'\nimport level36 from './pokemon/445.png'\nimport level37 from './pokemon/376.png'\nimport level38 from './pokemon/248.png'\nimport level39 from './pokemon/448.png'\nimport level40 from './pokemon/150.png'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport {makeStyles, ThemeProvider} from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport Input from '@material-ui/core/Input'\nimport Slider from '@material-ui/core/Slider'\nimport Grid from '@material-ui/core/Grid'\nimport {createMuiTheme, TextField} from '@material-ui/core'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport red from '@material-ui/core/colors/red'\nimport blue from '@material-ui/core/colors/blue'\n\nconst baseTheme = createMuiTheme({\n    palette: {\n        primary: blue,\n        secondary: red\n    }\n})\n\nconst App = () => (\n    <ThemeProvider theme={baseTheme}>\n        <VictoryRoad/>\n    </ThemeProvider>\n)\nconst useStyles = makeStyles(theme => ({\n    grid: {\n        backgroundColor: '#F5F5F5',\n        minHeight: '100vh'\n    },\n    card: {\n        textAlign: 'center'\n    },\n    typography: {\n        fontSize: '3em'\n    },\n    textField: {\n        [theme.breakpoints.up('md')]: {\n            fontSize: '2em'\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '3em'\n        }\n    },\n    wrapper: {\n        [theme.breakpoints.up('md')]: {\n            display: 'inline'\n        }\n    },\n    redWrapper: {\n        padding: '0px 0px 0px 20px',\n        color: '#FE0100',\n        [theme.breakpoints.up('md')]: {\n            display: 'inline'\n        }\n    },\n    yellowWrapper: {\n        padding: '0px 0px 0px 20px',\n        color: '#FBC211',\n        [theme.breakpoints.up('md')]: {\n            display: 'inline'\n        }\n    },\n    greenWrapper: {\n        padding: '0px 0px 0px 20px',\n        color: '#007F00',\n        [theme.breakpoints.up('md')]: {\n            display: 'inline'\n        }\n    },\n    goalLevel: {\n        [theme.breakpoints.up('md')]: {\n            padding: '0px 0px 0px 20px',\n            fontSize: '5em'\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '4em'\n        }\n    }\n}))\n\nfunction VictoryRoad() {\n    const images = [level1, level2, level3, level4, level5, level6, level7, level8, level9, level10,\n        level11, level12, level13, level14, level15, level16, level17, level18, level19, level20,\n        level21, level22, level23, level24, level25, level26, level27, level28, level29, level30,\n        level31, level32, level33, level34, level35, level36, level37, level38, level39, level40]\n    const levels = [0, 1000, 3000, 6000, 10000, 15000, 21000, 28000, 36000, 45000,\n        55000, 65000, 75000, 85000, 100000, 120000, 140000, 160000, 185000,\n        210000, 260000, 335000, 435000, 560000, 710000, 900000, 1100000, 1350000, 1650000,\n        2000000, 2500000, 3000000, 3750000, 4750000, 6000000, 7500000, 9500000, 12000000, 15000000, 20000000]\n    const [currentXP, setCurrentXP] = useState(0)\n    const [goalLevel, setGoalLevel] = useState(40)\n    const classes = useStyles()\n    const shouldFullWidth = useMediaQuery(theme => theme.breakpoints.down('sm'))\n\n    const handleXPInputChange = event => {\n        if (event.target.value > 20000000) {\n            setCurrentXP(20000000)\n        } else if (event.target.value < 0) {\n            setCurrentXP(0)\n        } else {\n            setCurrentXP(event.target.value === '' ? '' : Number(event.target.value))\n        }\n    }\n\n    const handleSliderChange = (event, newValue) => {\n        setCurrentXP(newValue)\n    }\n\n    const calculateLevel = () => {\n        return levels.filter(level => level <= currentXP).length\n    }\n\n    const calculateImage = () => {\n        return images[calculateLevel() - 1]\n    }\n\n    const handleStyle = () => {\n        if (currentXP / levels[goalLevel - 1] > 0.9) {\n            return 'green'\n        } else if (currentXP / levels[goalLevel - 1] > 0.5) {\n            return 'yellow'\n        } else {\n            return 'red'\n        }\n    }\n\n    const calculateRemaining = () => {\n        if (goalLevel === 0 || typeof goalLevel !== 'number' || levels[goalLevel - 1] - currentXP < 0) {\n            return 0\n        }\n        return (levels[goalLevel - 1] - currentXP).toLocaleString()\n    }\n\n    const handleGoalInputChange = event => {\n        if (event.target.value > 40) {\n            setGoalLevel(40)\n        } else if (event.target.value < 0) {\n            setGoalLevel(0)\n        } else {\n            setGoalLevel(event.target.value === '' ? '' : Number(event.target.value))\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Grid\n                container\n                spacing={0}\n                direction=\"row\"\n                alignItems=\"center\"\n                justify=\"center\"\n                className={classes.grid}\n            >\n                <Grid item sm={6} xs={12}>\n                    <Card className={classes.card}>\n                        <CardContent>\n                            <Typography className={classes.typography}>\n                                Pokemon Go XP Calculator\n                            </Typography>\n\n                            <TextField\n                                fullWidth={shouldFullWidth}\n                                value={currentXP}\n                                label=\"Current XP\"\n                                size={'medium'}\n                                onChange={handleXPInputChange}\n                                inputProps={{\n                                    step: 1,\n                                    min: 0,\n                                    className: classes.textField,\n                                    max: levels[goalLevel - 1],\n                                    type: 'number',\n                                    'aria-labelledby': 'input-slider'\n                                }}\n                            />\n\n                            <Slider\n                                value={typeof currentXP === 'number' ? currentXP : 0}\n                                onChange={handleSliderChange}\n                                max={levels[goalLevel - 1]}\n                                min={0}\n                                step={1}\n                                color={'secondary'}\n                                aria-labelledby='input-slider'\n                            />\n\n                            <Typography variant=\"h5\" component=\"h2\">\n                                Current level: {calculateLevel()}\n                            </Typography>\n\n                            <img src={calculateImage()} alt=\"Pokemon\"/>\n\n                            <Typography\n                                className={classes.typography}\n                                component=\"h2\"\n                                variant=\"h5\"\n                            >\n                                <div className={classes.wrapper}>\n                                    XP needed:\n                                </div>\n                                {handleStyle() === 'green' &&\n                                <div className={classes.greenWrapper}>\n                                    {calculateRemaining()}\n                                </div>\n                                }\n                                {handleStyle() === 'yellow' &&\n                                <div className={classes.yellowWrapper}>\n                                    {calculateRemaining()}\n                                </div>\n                                }\n                                {handleStyle() === 'red' &&\n                                <div className={classes.redWrapper}>\n                                    {calculateRemaining()}\n                                </div>\n                                }\n                            </Typography>\n\n                            <Typography\n                                variant=\"h5\"\n                                component=\"h2\"\n                                display=\"inline\"\n                                className={classes.typography}\n                            >\n                                To level:\n                            </Typography>\n                            <Input\n                                value={goalLevel}\n                                fullWidth={shouldFullWidth}\n                                onChange={handleGoalInputChange}\n                                inputProps={{\n                                    step: 1,\n                                    min: 1,\n                                    max: 40,\n                                    className: classes.goalLevel,\n                                    type: 'number',\n                                    'aria-labelledby': 'input-slider'\n                                }}\n                            />\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default App\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}